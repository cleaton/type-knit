import{z as T}from"zod";var c=T.object({username:T.string()}),u=class{constructor(){}instance(l,p,e,d=[]){return{_type:"instance",_schema:e,_middlewares:d,instance:(i,y)=>({fetch:p(i,y)})}}call(l,p,e=[]){return{_type:"call",_schema:l,_middlewares:e,call:p}}stream(l,p,e=[]){return{_type:"stream",_schema:l,_middlewares:e,stream:p}}router(l,p=[]){return{...l,_middlewares:p,_type:"router",route:async e=>{let i=new URL(e.req.url).pathname.split("/");i.shift();let y=i.shift();console.log("paths",i),console.log("first",y);for(let o of p){let r=o.handle(e);if(r.type=="response")return r.data;e=r.data}if(!e.__tk_internals){let r=new URL(e.req.url).pathname.split("/");r.shift();let t=await e.req.json();if(typeof t!="object")return console.log("bad req"),new Response("bad request",{status:400});if(t.args=t.args?t.args:[],!Array.isArray(t.args))return console.log("bad args",t.args),new Response("bad request",{status:400});e.__tk_internals={index:0,paths:r,tkreq:t}}let n=l[e.__tk_internals.paths[e.__tk_internals.index]];switch(console.log("obj",e.__tk_internals.paths,e.__tk_internals.index,n),n._type){case"call":{let o=e.__tk_internals.tkreq.args.shift();console.log("payload",o);let r=n._schema.safeParse(o),t=n.call(r.data,e);if(t.error){let m=t.status?t.status:400;return new Response(t.error,{status:m})}return new Response(JSON.stringify(t),{status:200})}case"stream":{let o=await e.req.json(),r=n._schema.safeParse(o),t=n.stream(r,e);return new Response(JSON.stringify("TODO"),{status:200})}case"instance":{let o=await e.req.json(),r=n._schema.safeParse(o),{fetch:t}=n.instance(r,e);return t(e.req)}case"router":return++e.__tk_internals.index,n.route(e)}return new Response("route not found",{status:404})}}}},a=new u,R=a.router({other:{_type:"call",_middlewares:[],_schema:c,call:s=>"hi"}}),x=a.router({test2:a.call(c,s=>s.username)}),h=a.router({test2:a.call(c,s=>s.username)}),f=a.router({test:a.call(c,s=>13),subrouter:x,instancerouter:a.instance(h,(s,l)=>fetch,c),st:a.stream(c,s=>({topic:"test",initValue:1234}))});var K=a.call(c,s=>s.username),_={f:()=>s=>({test:"hi"})};_.f()({hi:"hello"});export{u as TKBuilder};
