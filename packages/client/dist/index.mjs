function p(t,e){return c=>{let r=new URL(t.url);r.pathname=r.pathname+t.execPath,t.execArgs.push(c);let n=new t.impl.Request(r,{...t.options,body:JSON.stringify({args:t.execArgs})});return e(n)}}var u=class{constructor(e){this.req=e;this.cancelled=!1}async cancel(){var e;this.cancelled=!0,(e=this.reader)==null||e.cancel()}async start(e){e({state:"connecting"});let c=await fetch(this.req);e({state:"connected"});let r=c.body,n;if(r){this.reader=r.pipeThrough(new TextDecoderStream).getReader();let a="",o=!1;for(;!this.cancelled;){let{done:h,value:l}=await this.reader.read();if(h){o=!0;break}if(l){let s=l.indexOf(`
`);if(s){a+=l.slice(0,s);let i=JSON.parse(a);n=i,e({state:"data",data:i}),a=l.slice(s+1)}else a+=l}}o&&e({state:"done",lastData:n})}}},d={get(t,e,c){let r=e;switch(t.execPath=t.execPath?t.execPath+"/"+r:r,e){case"call":return p(t,n=>fetch(n).then(a=>a.json()));case"stream":return p(t,n=>new u(n));case"instance":return async n=>(t.execArgs.push(n),new Proxy(t,d));default:return new Proxy(t,d)}}};function T(t,e,c){let r=c||{fetch:global.fetch,Request:global.Request,Response:global.Response},n={method:"POST"},a={"content-type":"application/json"},o=e||{},h=e!=null&&e.headers?e.headers:{},l=new URL(t);return{e:s=>{s=s||{};let i=s!=null&&s.headers?s.headers:{},f={...h,...i,...a},x={...o,...s,...n,headers:f},y={url:l,options:x,impl:r,execArgs:[]};return new Proxy(y,d)}}}export{T as createClient};
